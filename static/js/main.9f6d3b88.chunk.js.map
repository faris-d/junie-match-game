{"version":3,"sources":["js/FrontSide.js","js/BackSide.js","js/Square.js","images/fart.png","images/nap.png","images/profile.png","images/side.png","images/sleep.png","images/sweater.png","js/imageImports.js","js/Game.js","js/App.js","index.js"],"names":["FrontSide","src","alt","style","className","props","BackSide","onClick","Square","imageUrl","isFlipped","flipDirection","imageImports","fart","nap","profile","side","sleep","sweater","generateSquares","array","squares","sort","Math","random","slice","map","url","id","uuidv1","toggleFlip","JSON","parse","stringify","Game","useState","setSquares","setToggleFlip","square1","setSquare1","square2","setSquare2","setSquareIsFlipped","squareID","prev","sq","setSquareToggleFlip","resetBothCards","useEffect","setTimeout","index","square","length","square1ID","square2ID","onFail","onSquareClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f6d3b88.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function FrontSide({ src, alt=\"\", style={}, className=\"frontside\", ...props }) {\n  return <img src={src} alt={alt} style={style} className={className} {...props}/>;\n};\n","import react from 'react';\n\nexport default function BackSide({ onClick }) {\n  return <div className=\"backside\" onClick={onClick}></div>;\n}","import React from 'react';\nimport FrontSide from './FrontSide';\nimport BackSide from './BackSide';\nimport ReactCardFlip from 'react-card-flip';\n\nexport default function Square({ imageUrl, isFlipped, onClick}) {\n  return(\n    <div className=\"square-container\" onClick={onClick}>\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n        <FrontSide src={imageUrl} className=\"image-container\"/>\n        <BackSide />\n      </ReactCardFlip>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/fart.3f10a284.png\";","export default __webpack_public_path__ + \"static/media/nap.a7cb47aa.png\";","export default __webpack_public_path__ + \"static/media/profile.069bef83.png\";","export default __webpack_public_path__ + \"static/media/side.3fc9386d.png\";","export default __webpack_public_path__ + \"static/media/sleep.2b6973a2.png\";","export default __webpack_public_path__ + \"static/media/sweater.8fb53136.png\";","import fart from '../images/fart.png';\nimport nap from '../images/nap.png';\nimport profile from '../images/profile.png';\nimport side from '../images/side.png';\nimport sleep from '../images/sleep.png';\nimport sweater from '../images/sweater.png';\n\nconst imageImports = [fart, nap, profile, side, sleep, sweater, fart, nap, profile, side, sleep, sweater];\n\n\nexport default imageImports;\n","import React, { useEffect, useState } from 'react';\nimport { v1 as uuidv1 } from 'uuid';\nimport Square from './Square';\nimport imageImports from './imageImports';\n\n\nfunction shuffleArray(array){\n  return array.sort( () => .5 - Math.random());\n}\n\nfunction generateSquares() {\n  const squares = shuffleArray(imageImports)\n  .slice(0) //creates shallow copy\n  .map(url => ({\n    id: uuidv1(),\n    imageUrl: url,\n    isFlipped: false,\n    toggleFlip: true\n  }));\n  return JSON.parse(JSON.stringify(squares));\n}\n\nexport default function Game() {\n  \n  const [squares, setSquares] = useState(generateSquares());\n  const [toggleFlip, setToggleFlip] = useState(false);\n  const [square1, setSquare1] = useState(null);\n  const [square2, setSquare2] = useState(null);\n\n  function setSquareIsFlipped(squareID, isFlipped) {\n    setSquares(prev => prev.map(sq => {\n      if (sq.id !== squareID)\n        return sq;\n      return {...sq, isFlipped};\n    }));\n  }\n\n  function setSquareToggleFlip(squareID, toggleFlip) {\n    setSquares(prev => prev.map(sq => {\n      if (sq.id !== squareID)\n        return sq;\n      return {...sq, toggleFlip};\n    }));\n  }\n\n  //showcase\n  useEffect(() => {\n    setTimeout(() => {\n      let index = 0;\n      for (const square of squares) {\n        setTimeout(() => setSquareIsFlipped(square.id, true), index++ * 100);\n      }\n      setTimeout(() => setToggleFlip(true), squares.length * 100);\n    }, 1000);\n  }, []);\n\n\n  function resetBothCards() {\n    setSquare1(null);\n    setSquare2(null);\n  }\n\n  function onMatch() {\n    setSquareToggleFlip(square1.id, false);\n    setSquareToggleFlip(square2.id, false);\n    setSquareIsFlipped(square1.id, false);\n    setSquareIsFlipped(square2.id, false);\n    resetBothCards();\n  }\n\n  function onFail() {\n    const square1ID = square1.id;\n    const square2ID = square2.id;\n\n    setTimeout(() => {\n      setSquareIsFlipped(square1ID, true);\n    }, 1000);\n    setTimeout(() => {\n      setSquareIsFlipped(square2ID, true);\n    }, 1200);\n      \n    resetBothCards();\n  }\n    \n  useEffect(() => {\n    if (!square1 || !square2)\n      return;\n    (square1.imageUrl === square2.imageUrl) ? onMatch() : onFail();\n  }, [square1, square2]);\n\n  function onSquareClick(square) {\n    if (!toggleFlip)\n      return;\n    if (!square.toggleFlip)\n      return;\n    \n    if ((square1 && (square.id === square1.id) || (square2 && (square.id === square2.id))))\n      return;\n\n    setSquareIsFlipped(square.id, false);\n\n    (square1) ? setSquare2(square) : setSquare1(square);\n  }\n\n  return(\n    <div className=\"game-container\">\n      <div className=\"squares-container\">\n        {squares.map((square) => (\n          <Square onClick={() => onSquareClick(square)} key={square.id} {...square}/>\n      ))}\n      </div>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport Game from './Game';\nimport \"../css/app.css\";\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/App';\nimport './css/app.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}